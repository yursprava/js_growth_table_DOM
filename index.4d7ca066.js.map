{"mappings":"ACEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAE/B,EAAqB,SAAS,aAAa,CAAC,kBAE5C,EAAqB,SAAS,aAAa,CAAC,kBAE5C,EAAkB,SAAS,aAAa,CAAC,eAEzC,EAAkB,SAAS,aAAa,CAAC,eA+F/C,SAAS,gBAAgB,CAAC,QAAS,SAAU,CAAE,EAa7C,GAZI,EAAG,MAAM,GAAK,GAChB,AAvFJ,WACE,IAAM,EAAiB,SAAS,gBAAgB,CAAC,MAE5C,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAA6B,CAA7B,IAAM,EAAN,EAAA,KAAA,CACH,GAAI,AANW,KAMX,EAAI,KAAK,CAAC,MAAM,CAClB,MATgB,CAAA,IAYd,EAAI,KAAK,CAAC,MAAM,EAClB,EAAmB,YAAY,CAAC,WAAY,QAjB/B,IAoBX,EAAI,KAAK,CAAC,MAAM,EAClB,EAAmB,eAAe,CAAC,YAGrC,IAAM,EAAQ,SAAS,aAAa,CAAC,MAErC,EAAI,MAAM,CAAC,EACb,C,C,M,E,CAhBK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAiBP,IAsEM,EAAG,MAAM,GAAK,GAChB,AArEJ,WACE,IAAM,EAAiB,SAAS,gBAAgB,CAAC,MAE5C,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAA6B,CAA7B,IAAM,EAAN,EAAA,KAAA,CACH,GAAI,AAlCW,IAkCX,EAAI,KAAK,CAAC,MAAM,CAClB,MAjCgB,CAAA,IAoCd,EAAI,KAAK,CAAC,MAAM,EAClB,EAAmB,YAAY,CAAC,WAAY,QAjC/B,KAoCX,EAAI,KAAK,CAAC,MAAM,EAClB,EAAmB,eAAe,CAAC,YAKrC,AAFe,EAAI,KAAK,CAAC,EAAI,KAAK,CAAC,MAAM,CAAG,EAAE,CAEvC,MAAM,EACf,C,C,M,E,CAhBK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAiBP,IAoDM,EAAG,MAAM,GAAK,GAChB,AAnDJ,WACE,IAAM,EAAiB,SAAS,gBAAgB,CAAC,MAEjD,GAAI,AAjDa,KAiDb,EAAe,MAAM,EAnDL,IAuDhB,EAAe,MAAM,EACvB,EAAgB,YAAY,CAAC,WAAY,QA5D1B,IA+Db,EAAe,MAAM,EACvB,EAAgB,eAAe,CAAC,YAIlC,IAAM,EAAW,AADA,SAAS,aAAa,CAAC,MACd,SAAS,CAAC,CAAA,GAEpC,EAAM,MAAM,CAAC,GACf,IAmCM,EAAG,MAAM,GAAK,EAChB,CAjCF,IAAM,CA1EW,CAAA,IA4Eb,CAFE,EAAiB,SAAS,gBAAgB,CAAC,OAE9B,MAAM,GA1EL,IA8EhB,EAAe,MAAM,EACvB,EAAgB,YAAY,CAAC,WAAY,QA3E1B,KA8Eb,EAAe,MAAM,EACvB,EAAgB,eAAe,CAAC,YAKlC,AAFgB,CAAc,CAAC,EAAe,MAAM,CAAG,EAAE,CAEjD,MAAM,GAgBd,CAGF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar tbody = document.querySelector(\"tbody\");\nvar appendColumnButton = document.querySelector(\".append-column\");\nvar removeColumnButton = document.querySelector(\".remove-column\");\nvar appendRowButton = document.querySelector(\".append-row\");\nvar removeRowButton = document.querySelector(\".remove-row\");\nvar minTabSize = 2;\nvar preMinTabSize = 3;\nvar preMaxTabSize = 9;\nvar maxTabSize = 10;\nfunction appendColumn() {\n    var rowsCollection = document.querySelectorAll(\"tr\");\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = rowsCollection[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            if (row.cells.length === maxTabSize) return;\n            if (row.cells.length === preMaxTabSize) appendColumnButton.setAttribute(\"disabled\", \"true\");\n            if (row.cells.length === minTabSize) removeColumnButton.removeAttribute(\"disabled\");\n            var newTd = document.createElement(\"td\");\n            row.append(newTd);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n}\nfunction removeColumn() {\n    var rowsCollection = document.querySelectorAll(\"tr\");\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = rowsCollection[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            if (row.cells.length === minTabSize) return;\n            if (row.cells.length === preMinTabSize) removeColumnButton.setAttribute(\"disabled\", \"true\");\n            if (row.cells.length === maxTabSize) appendColumnButton.removeAttribute(\"disabled\");\n            var lastTd = row.cells[row.cells.length - 1];\n            lastTd.remove();\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n}\nfunction appendRow() {\n    var rowsCollection = document.querySelectorAll(\"tr\");\n    if (rowsCollection.length === maxTabSize) return;\n    if (rowsCollection.length === preMaxTabSize) appendRowButton.setAttribute(\"disabled\", \"true\");\n    if (rowsCollection.length === minTabSize) removeRowButton.removeAttribute(\"disabled\");\n    var firstRow = document.querySelector(\"tr\");\n    var rowClone = firstRow.cloneNode(true);\n    tbody.append(rowClone);\n}\nfunction removeRow() {\n    var rowsCollection = document.querySelectorAll(\"tr\");\n    if (rowsCollection.length === minTabSize) return;\n    if (rowsCollection.length === preMinTabSize) removeRowButton.setAttribute(\"disabled\", \"true\");\n    if (rowsCollection.length === maxTabSize) appendRowButton.removeAttribute(\"disabled\");\n    var lastRow = rowsCollection[rowsCollection.length - 1];\n    lastRow.remove();\n}\ndocument.addEventListener(\"click\", function(ev) {\n    if (ev.target === appendColumnButton) appendColumn();\n    if (ev.target === removeColumnButton) removeColumn();\n    if (ev.target === appendRowButton) appendRow();\n    if (ev.target === removeRowButton) removeRow();\n});\n\n//# sourceMappingURL=index.4d7ca066.js.map\n","'use strict';\n\nconst tbody = document.querySelector('tbody');\n\nconst appendColumnButton = document.querySelector('.append-column');\n\nconst removeColumnButton = document.querySelector('.remove-column');\n\nconst appendRowButton = document.querySelector('.append-row');\n\nconst removeRowButton = document.querySelector('.remove-row');\n\nconst minTabSize = 2;\n\nconst preMinTabSize = 3;\n\nconst preMaxTabSize = 9;\n\nconst maxTabSize = 10;\n\nfunction appendColumn() {\n  const rowsCollection = document.querySelectorAll('tr');\n\n  for (const row of rowsCollection) {\n    if (row.cells.length === maxTabSize) {\n      return;\n    }\n\n    if (row.cells.length === preMaxTabSize) {\n      appendColumnButton.setAttribute('disabled', 'true');\n    }\n\n    if (row.cells.length === minTabSize) {\n      removeColumnButton.removeAttribute('disabled');\n    }\n\n    const newTd = document.createElement('td');\n\n    row.append(newTd);\n  }\n}\n\nfunction removeColumn() {\n  const rowsCollection = document.querySelectorAll('tr');\n\n  for (const row of rowsCollection) {\n    if (row.cells.length === minTabSize) {\n      return;\n    }\n\n    if (row.cells.length === preMinTabSize) {\n      removeColumnButton.setAttribute('disabled', 'true');\n    }\n\n    if (row.cells.length === maxTabSize) {\n      appendColumnButton.removeAttribute('disabled');\n    }\n\n    const lastTd = row.cells[row.cells.length - 1];\n\n    lastTd.remove();\n  }\n}\n\nfunction appendRow() {\n  const rowsCollection = document.querySelectorAll('tr');\n\n  if (rowsCollection.length === maxTabSize) {\n    return;\n  }\n\n  if (rowsCollection.length === preMaxTabSize) {\n    appendRowButton.setAttribute('disabled', 'true');\n  }\n\n  if (rowsCollection.length === minTabSize) {\n    removeRowButton.removeAttribute('disabled');\n  }\n\n  const firstRow = document.querySelector('tr');\n  const rowClone = firstRow.cloneNode(true);\n\n  tbody.append(rowClone);\n}\n\nfunction removeRow() {\n  const rowsCollection = document.querySelectorAll('tr');\n\n  if (rowsCollection.length === minTabSize) {\n    return;\n  }\n\n  if (rowsCollection.length === preMinTabSize) {\n    removeRowButton.setAttribute('disabled', 'true');\n  }\n\n  if (rowsCollection.length === maxTabSize) {\n    appendRowButton.removeAttribute('disabled');\n  }\n\n  const lastRow = rowsCollection[rowsCollection.length - 1];\n\n  lastRow.remove();\n}\n\ndocument.addEventListener('click', function (ev) {\n  if (ev.target === appendColumnButton) {\n    appendColumn();\n  }\n\n  if (ev.target === removeColumnButton) {\n    removeColumn();\n  }\n\n  if (ev.target === appendRowButton) {\n    appendRow();\n  }\n\n  if (ev.target === removeRowButton) {\n    removeRow();\n  }\n});\n"],"names":["tbody","document","querySelector","appendColumnButton","removeColumnButton","appendRowButton","removeRowButton","addEventListener","ev","target","appendColumn","rowsCollection","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","row","value","cells","length","setAttribute","removeAttribute","newTd","createElement","append","err","return","removeColumn","lastTd","remove","appendRow","rowClone","firstRow","cloneNode","removeRow","lastRow"],"version":3,"file":"index.4d7ca066.js.map"}